<?xml version="1.0" encoding="UTF-8"?> 

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bangkok.info.mapper.InfoMapper">

    <select id="list" resultType="com.bangkok.info.vo.InfoVO">
    select no, title, writer, cityNum, cityname, Place, countrycode, writeDate, imageFile, cate_code1, cate_name from 
    ( select rownum rnum, no, title, writer, citynum, cityname, Place, countrycode, writeDate, imageFile, 
    cate_code1, cate_name from 
        ( select ti.no, ti.title, ti.writer, c.cityNum, c.cityname, ti.Place, c.countrycode, ti.writeDate, 
        ti.imageFile, ti.cate_code1, cat.cate_name from tripInfo ti join city c on ti.cityNum = c.cityNum
        left join tripInfocategory cat on ti.cate_code1 = cat.cate_code1
            <include refid="search"/>
            order by ti.no asc
        )
    )
    where rnum between #{startRow} and #{endRow}
</select>



<select id="getTripInfo" resultType="com.bangkok.info.vo.InfoVO">
    select
        ti.no, ti.title, ti.content, ti.writer, ti.Place, c.cityname, c.countrycode,
        tri.filename, cat.cate_name
    from TripInfo ti
    join city c on ti.cityNum = c.cityNum
    left join tripInfoImage tri on ti.no = tri.image_no
    left join tripInfocategory cat on ti.cate_code1 = cat.cate_code1
    where ti.no = #{no}  <!-- 상세보기에서 no로 필터링 -->
</select>

<select id="getTotalRow" resultType="Long">
    select count(*)
    from tripInfo
</select>

<sql id="search">
    <if test="word != null and word != ''.toString()">
        where
        <trim prefixOverrides="or">
            <if test="key.indexOf('t') >= 0">
                or title like '%' || #{word} || '%'
            </if>
            <if test="key.indexOf('c') >= 0">
                or content like '%' || #{word} || '%'
            </if>
        </trim>
    </if>
</sql>

<select id="view" resultType="com.bangkok.info.vo.InfoVO">
SELECT
ti.no, ti.title, ti.content, ti.writer, ti.writeDate,
c.cityname, ti.imageFile
FROM tripInfo ti
JOIN city c ON ti.cityNum = c.cityNum
LEFT JOIN tripInfoImage tri ON ti.no = tri.image_no
WHERE ti.no = #{no}
</select>

<!-- 위도 경도 정보 조회 -->
<select id="latAnalng" resultType="com.bangkok.info.vo.InfoVO">
    SELECT lat, lng FROM tripInfo WHERE lat = #{lat} AND lng = #{lng}
</select>



<insert id="write">
    <selectKey keyProperty="no" resultType="Long" order="BEFORE">
        select tripInfo_seq.nextval from dual
    </selectKey>
    INSERT INTO tripInfo(no, title, content, 
        writer, cate_code1, place, imageFile, cityNum)
    VALUES (#{no}, #{title}, #{content}, #{writer},
        #{cate_code1, jdbcType=INTEGER}, 
        #{place, jdbcType=VARCHAR}, 
        #{imageFile, jdbcType=VARCHAR},
        #{cityNum, jdbcType=INTEGER}
    )
</insert>


<!-- 이미지 리스트 조회 -->
<select id="imageList" resultType="com.bangkok.info.vo.InfoImageVO">
    SELECT image_no, no, filename from tripInfoImage WHERE no = #{no}
</select>

 <!-- 도시 정보 조회 -->
<!-- <select id="cityList" resultType="com.bangkok.cityPlace.vo.CityVO"> -->
<!-- 	select ct.cityNum, ct.cityName, ct.cityImg, c.countryKor -->
<!-- 	from city ct, country c -->
<!-- 	where -->
<!-- 	ct.countryCode = c.countryCode -->
<!-- </select> -->


<!-- image 추가 -->
<insert id="writeImage" parameterType="java.util.List">
insert into TripinfoImage(image_no, no, filename)
select TripinfoImage_seq.nextval, no, filename from
(
<foreach collection="list" item="vo" separator=" union all ">
select #{vo.no} no, #{vo.filename} filename
from dual
</foreach>
)
</insert>


<update id="update">
    <![CDATA[
        UPDATE tripInfo
        SET title = #{title, jdbcType=VARCHAR}, 
            content = #{content, jdbcType=VARCHAR}, 
            writer = #{writer, jdbcType=VARCHAR}, 
            place = #{place, jdbcType=VARCHAR}
        WHERE no = #{no}
    ]]>
</update>


<!-- 데이터 삭제 -->
<delete id="delete">
    <![CDATA[
        delete from tripInfo
        where no = #{no}
    ]]>
</delete>

</mapper>
