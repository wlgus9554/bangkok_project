<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.bangkok.airReservation.mapper.AirReservationMapper">

	<select id="list"
		resultType="com.bangkok.airReservation.vo.AirReservationVO">
		SELECT
		    ar.reservationNo,
		    ar.reservationLabel,
		    ar.email,
		    ar.booking_date,
		    ar.total_price,
		    ar.payment_method,
		    rs.status_name AS status,  
		    ac.scheduleid AS scheduleId_a,
		    ac.flightName,
		    ac.departureTime,
		    ac.ArrivalTime,
		    ac.duration,
		    ar2.arrival,
		    ar2.departure,
		    ar2.type,
		    al.airLineKor,
		    al.airLineEng,
		    rs.classNo,
		    LISTAGG(s.seatID, ',') WITHIN GROUP (ORDER BY s.seatID) AS seatID,  -- 여러 좌석을 쉼표로 구분하여 반환
		    COUNT(DISTINCT ap.adultpassengerNo) AS adult_count,
		    COUNT(DISTINCT cp.childpassengerNo) AS child_count,
		    COUNT(DISTINCT ip.infantpassengerNo) AS infant_count
		FROM
		    airplane_reservation ar
		JOIN
		    reservation_schedule rs ON ar.reservationno = rs.reservationno
		JOIN
		    airSchedule ac ON rs.scheduleID = ac.scheduleID
		JOIN
		    airroute ar2 ON ar2.routeID = ac.routeID
		JOIN
		    airline al ON ar2.airLineNo = al.airLineNo
		LEFT JOIN
		    seatReservation sr ON ar.reservationNo = sr.reservationNo
		LEFT JOIN
		    seat s ON sr.seatNo = s.seatNo
		LEFT JOIN
		    adult_passenger ap ON ar.reservationNo = ap.reservationno
		LEFT JOIN
		    child_passenger cp ON ar.reservationNo = cp.reservationno
		LEFT JOIN
		    infant_passenger ip ON ar.reservationNo = ip.reservationno
		LEFT JOIN
		    reservation_status rs ON ar.status = rs.status_no  
		    WHERE
			ar.email = #{email}
		GROUP BY
		    ar.reservationNo, ar.reservationLabel, ar.email, ar.booking_date, ar.total_price,
		    ar.payment_method, rs.status_name, ac.scheduleID, ac.flightName,
		    ac.departureTime, ac.ArrivalTime, ac.duration, ar2.arrival, ar2.departure,
		    ar2.type, al.airLineKor, al.airLineEng, rs.classNo


	</select>

	<select id="view"
		resultType="com.bangkok.airReservation.vo.AirReservationVO">
		SELECT
		ar.reservationNo,
		ar.reservationLabel,
		ar.email,
		ar.booking_date,
		ar.total_price,
		ar.payment_method,
		ar.status,
		ac.scheduleid scheduleId_a,
		ac.flightName,
		ac.departureTime,
		ac.ArrivalTime,
		ac.duration,
		ar2.arrival,
		ar2.departure,
		ar2.type,
		al.airLineKor,
		al.airLineEng,
		rs.classNo,
		MAX(s.seatID) AS seatID,
		COUNT(DISTINCT ap.adultpassengerNo) AS adult_count,
		COUNT(DISTINCT cp.childpassengerNo) AS child_count,
		COUNT(DISTINCT ip.infantpassengerNo) AS infant_count
		FROM
		airplane_reservation ar
		JOIN
		reservation_schedule rs ON ar.reservationno = rs.reservationno
		JOIN
		airSchedule ac ON rs.scheduleID = ac.scheduleID
		JOIN
		airroute ar2 ON ar2.routeID = ac.routeID
		JOIN
		airline al ON ar2.airLineNo = al.airLineNo
		LEFT JOIN
		seatReservation sr ON ar.reservationNo = sr.reservationNo
		LEFT JOIN
		seat s ON sr.seatNo = s.seatNo
		LEFT JOIN
		adult_passenger ap ON ar.reservationNo = ap.reservationno
		LEFT JOIN
		child_passenger cp ON ar.reservationNo = cp.reservationno
		LEFT JOIN
		infant_passenger ip ON ar.reservationNo = ip.reservationno
		WHERE
		ar.reservationNo = #{reservationNo}
		GROUP BY
		ar.reservationNo, ar.reservationLabel, ar.email, ar.booking_date, ar.total_price,
		ar.payment_method, ar.status, ac.scheduleID, ac.flightName,
		ac.departureTime,
		ac.ArrivalTime, ac.duration, ar2.arrival, ar2.departure, ar2.type,
		al.airLineKor, al.airLineEng, rs.classNo
	</select>

	<select id="viewscheduleID" resultType="Long">
		select scheduleid
		scheduleId_a from reservation_schedule where reservationNo =
		#{reservationNo}
	</select>

	<select id="viewPassengers"
		resultType="com.bangkok.airReservation.vo.PassengersVO">
		SELECT
		adultPassengerNo AS passengerNo,
		reservationNo,
		first_name,
		last_name,
		birth,
		nationality,
		passport_number,
		passport_endDate,
		gender,
		'성인' AS passenger_type
		FROM
		adult_passenger
		WHERE
		reservationNo = #{reservationNo}

		UNION ALL

		SELECT
		childPassengerNo AS passengerNo,
		reservationNo,
		first_name,
		last_name,
		birth,
		nationality,
		passport_number,
		passport_endDate,
		gender,
		'소아' AS passenger_type
		FROM
		child_passenger
		WHERE
		reservationNo = #{reservationNo}

		UNION ALL

		SELECT
		infantPassengerNo AS passengerNo,
		reservationNo,
		first_name,
		last_name,
		birth,
		nationality,
		passport_number,
		passport_endDate,
		gender,
		'유아' AS passenger_type
		FROM
		infant_passenger
		WHERE
		reservationNo = #{reservationNo}
	</select>



	<insert id="reservation">
		<selectKey keyProperty="reservationNo" resultType="Long"
			order="BEFORE">
			SELECT airplane_Reservation_seq.NEXTVAL FROM dual
		</selectKey>

		INSERT INTO airplane_reservation (
		reservationNo,
		reservationLabel,
		email,
		booking_date,
		total_price
		)
		VALUES (
		#{reservationNo},
		#{reservationLabel},
		#{email},
		SYSDATE,
		#{total_Price}
		)
	</insert>



	<insert id="reservationSchedule">
		insert into reservation_schedule(reservationScheduleNo, reservationNo,
		scheduleID, classNo)
		select reservation_schedule_seq.nextval,
		#{reservationNo}, scheduleId, classNo
		from (
		<foreach collection="scheduleID" item="scheduleId"
			separator=" UNION ALL ">
			select #{reservationNo} as reservationNo, #{scheduleId} as
			scheduleId, #{classNo} classNo from
			dual
		</foreach>
		)
	</insert>


	<insert id="reservationAPassenger"
		parameterType="java.util.List">
		INSERT INTO adult_passenger (
		adultPassengerNo, reservationNo, first_name, last_name, birth, nationality,
		passport_number,
		passport_endDate, gender
		)
		SELECT
		adult_passenger_seq.nextval,
		reservationNo,
		first_name,
		last_name,
		birth,
		nationality,
		passport_number,
		passport_endDate,
		gender
		FROM (
		<foreach collection="list" item="vo" separator=" UNION ALL ">
			SELECT #{vo.reservationNo} AS reservationNo,
			#{vo.firstName} AS first_name,
			#{vo.lastName} AS last_name,
			#{vo.birth} AS birth,
			#{vo.nationality} AS nationality,
			#{vo.passport_number} AS passport_number,
			#{vo.passportEndDate} AS passport_endDate,
			#{vo.gender} AS gender
			FROM dual
		</foreach>
		)
	</insert>

	<insert id="reservationCPassenger"
		parameterType="java.util.List">
		INSERT INTO child_passenger (
		childPassengerNo, reservationNo, first_name, last_name, birth, nationality,
		passport_number,
		passport_endDate, gender
		)
		SELECT
		child_passenger_seq.nextval,
		reservationNo,
		first_name,
		last_name,
		birth,
		nationality,
		passport_number,
		passport_endDate,
		gender
		FROM (
		<foreach collection="list" item="vo" separator=" UNION ALL ">
			SELECT #{vo.reservationNo} AS reservationNo,
			#{vo.firstName} AS first_name,
			#{vo.lastName} AS last_name,
			#{vo.birth} AS birth,
			#{vo.nationality} AS nationality,
			#{vo.passport_number} AS passport_number,
			#{vo.passportEndDate} AS passport_endDate,
			#{vo.gender} AS gender
			FROM dual
		</foreach>
		)
	</insert>

	<insert id="reservationIPassenger"
		parameterType="java.util.List">
		INSERT INTO infant_passenger (
		infantPassengerNo, reservationNo, first_name, last_name, birth, nationality,
		passport_number,
		passport_endDate, gender
		)
		SELECT
		infant_passenger_seq.nextval,
		reservationNo,
		first_name,
		last_name,
		birth,
		nationality,
		passport_number,
		passport_endDate,
		gender
		FROM (
		<foreach collection="list" item="vo" separator=" UNION ALL ">
			SELECT
			#{vo.reservationNo, jdbcType=INTEGER} AS reservationNo,
			#{vo.firstName, jdbcType=VARCHAR} AS first_name,
			#{vo.lastName, jdbcType=VARCHAR} AS last_name,
			#{vo.birth, jdbcType=DATE} AS birth,
			#{vo.nationality, jdbcType=VARCHAR} AS nationality,
			#{vo.passport_number, jdbcType=VARCHAR} AS passport_number,
			#{vo.passportEndDate, jdbcType=DATE} AS passport_endDate,
			#{vo.gender, jdbcType=VARCHAR} AS gender
			FROM dual
		</foreach>
		)
	</insert>



	<insert id="reservationBaggage" parameterType="java.util.List">
		INSERT INTO baggage (baggageNo, reservationNo, baggageTypeID)

		SELECT
		baggage_seq.nextval, reservationNo,
		baggageTypeID
		FROM (
		<foreach collection="list" item="vo" separator=" union all ">
			SELECT
			#{vo.reservationNo} as reservationNo,
			#{vo.baggageTypeID} as
			baggageTypeID

			from dual
		</foreach>
		)
	</insert>

	<update id="reservationState">
		UPDATE airplane_reservation
		SET status = #{status}
		WHERE
		reservationNo = #{reservationNo} and email = #{email}
	</update>

	<update id="updateAPassportNumber">
		UPDATE adult_passenger
		SET passport_number = #{passport_number}
		WHERE reservationNo = #{reservationNo}
		AND passport_number = #{existingPassportNumber}
	</update>

	<update id="updateCPassportNumber">
		UPDATE child_passenger
		SET passport_number = #{passport_number}
		WHERE reservationNo = #{reservationNo}
		AND passport_number = #{existingPassportNumber}
	</update>

	<update id="updateIPassportNumber">
		UPDATE infant_passenger
		SET passport_number = #{passport_number}
		WHERE reservationNo = #{reservationNo}
		AND passport_number = #{existingPassportNumber}
	</update>

	<!-- 예약 취소 -->
	<update id="reservationDelete">
		<![CDATA[
			update airplane_reservation 
			  set status = #{status}
			  WHERE reservationNo = #{reservationNo, jdbcType=NUMERIC} 
			    AND reservationLabel = #{reservationLabel, jdbcType=VARCHAR}
		]]>
	</update>


	<!-- AJAX -->
	<select id="selectCountry"
		resultType="com.bangkok.airReservation.vo.CountryVO">
		select countryCode, countryEng
		from country
		order by
		countryEng desc
	</select>

	<select id="selectBaggage"
		resultType="com.bangkok.airReservation.vo.BaggageTypeVO">
		select baggageTypeID, baggage_Type, description, maxweight,
		price
		from baggage_Type
		order by baggage_Type desc
	</select>



	<!-- 모든 예약 조회 -->

	<select id="listAllReservations"
		resultType="com.bangkok.airReservation.vo.AirReservationVO">
		SELECT ar.reservationNo, ar.reservationLabel, ar.email, ar.booking_date,
		ar.total_price, ar.payment_method, ar.status,
		ac.scheduleid scheduleId_a, ac.flightName, ac.departureTime, ac.ArrivalTime,
		ac.duration,
		ar2.arrival, ar2.departure, ar2.type,
		al.airLineKor, al.airLineEng,
		rs.classNo,
		LISTAGG(seatID, ', ') WITHIN GROUP (ORDER BY seatID) AS seatID,

		COUNT(DISTINCT ap.adultpassengerNo) AS adult_count,
		COUNT(DISTINCT cp.childpassengerNo) AS child_count,
		COUNT(DISTINCT ip.infantpassengerNo) AS infant_count
		FROM airplane_reservation ar
		JOIN reservation_schedule rs ON ar.reservationno = rs.reservationno
		JOIN airSchedule ac ON rs.scheduleID = ac.scheduleID
		JOIN airroute ar2 ON ar2.routeID = ac.routeID
		JOIN airline al ON ar2.airLineNo = al.airLineNo
		LEFT JOIN seatReservation sr ON ar.reservationNo = sr.reservationNo
		LEFT JOIN (
		SELECT DISTINCT seatNo, seatID
		FROM seat
		) s ON sr.seatNo = s.seatNo
		LEFT JOIN adult_passenger ap ON ar.reservationNo = ap.reservationno
		LEFT JOIN child_passenger cp ON ar.reservationNo = cp.reservationno
		LEFT JOIN infant_passenger ip ON ar.reservationNo = ip.reservationno

		GROUP BY ar.reservationNo, ar.reservationLabel, ar.email, ar.booking_date,
		ar.total_price, ar.payment_method, ar.status,
		ac.scheduleID, ac.flightName, ac.departureTime, ac.ArrivalTime, ac.duration,
		ar2.arrival, ar2.departure, ar2.type,
		al.airLineKor, al.airLineEng,
		rs.classNo
		ORDER BY ar.reservationNo

	</select>
	
	<select id="selectStatus" resultType="com.bangkok.airReservation.vo.StatusVO">
		select status_no, status_name from reservation_status
	</select>


	<!-- 예약 상태 업데이트 -->
	<update id="updateReservationStatus">
		UPDATE airplane_reservation
		SET status = #{status}
		WHERE reservationNo = #{reservationNo}
	</update>


	<!-- 승객 삭제 -->
	<delete id="deletePassenger">
		DELETE FROM passenger
		WHERE passengerNo =
		#{passengerNo}
	</delete>


</mapper>